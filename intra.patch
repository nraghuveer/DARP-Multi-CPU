diff --git a/bks.sh b/bks.sh
index 6ff1d79..dee54ef 100755
--- a/bks.sh
+++ b/bks.sh
@@ -1,441 +1,721 @@
 #!/bin/bash
-filename="test-runs/$1-1.1.csv"
+filename="test-runs/bks/$1-1.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-1.1 pr01 $2 190.02 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-1.1 pr01 $2 190.02 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '1.1'
 
-filename="test-runs/$1-1.2.csv"
+filename="test-runs/bks/$1-1.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-1.2 pr01 $2 190.02 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-1.2 pr01 $2 190.02 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '1.2'
 
-filename="test-runs/$1-1.3.csv"
+filename="test-runs/bks/$1-1.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-1.3 pr01 $2 190.02 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-1.3 pr01 $2 190.02 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '1.3'
 
+filename="test-runs/bks/$1-1.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-1.4 pr01 $2 190.02 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '1.4'
+
+filename="test-runs/bks/$1-1.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-1.5 pr01 $2 190.02 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '1.5'
+
 
-filename="test-runs/$1-2.1.csv"
+filename="test-runs/bks/$1-2.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-2.1 pr02 $2 302.08 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-2.1 pr02 $2 302.08 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '2.1'
 
-filename="test-runs/$1-2.2.csv"
+filename="test-runs/bks/$1-2.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-2.2 pr02 $2 302.08 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-2.2 pr02 $2 302.08 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '2.2'
 
-filename="test-runs/$1-2.3.csv"
+filename="test-runs/bks/$1-2.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-2.3 pr02 $2 302.08 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-2.3 pr02 $2 302.08 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '2.3'
 
+filename="test-runs/bks/$1-2.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-2.4 pr02 $2 302.08 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '2.4'
+
+filename="test-runs/bks/$1-2.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-2.5 pr02 $2 302.08 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '2.5'
+
 
-filename="test-runs/$1-3.1.csv"
+filename="test-runs/bks/$1-3.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-3.1 pr03 $2 532.08 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-3.1 pr03 $2 532.08 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '3.1'
 
-filename="test-runs/$1-3.2.csv"
+filename="test-runs/bks/$1-3.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-3.2 pr03 $2 532.08 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-3.2 pr03 $2 532.08 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '3.2'
 
-filename="test-runs/$1-3.3.csv"
+filename="test-runs/bks/$1-3.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-3.3 pr03 $2 532.08 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-3.3 pr03 $2 532.08 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '3.3'
 
+filename="test-runs/bks/$1-3.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-3.4 pr03 $2 532.08 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '3.4'
+
+filename="test-runs/bks/$1-3.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-3.5 pr03 $2 532.08 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '3.5'
 
-filename="test-runs/$1-4.1.csv"
+
+filename="test-runs/bks/$1-4.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-4.1 pr04 $2 572.78 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-4.1 pr04 $2 572.78 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '4.1'
 
-filename="test-runs/$1-4.2.csv"
+filename="test-runs/bks/$1-4.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-4.2 pr04 $2 572.78 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-4.2 pr04 $2 572.78 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '4.2'
 
-filename="test-runs/$1-4.3.csv"
+filename="test-runs/bks/$1-4.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-4.3 pr04 $2 572.78 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-4.3 pr04 $2 572.78 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '4.3'
 
+filename="test-runs/bks/$1-4.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-4.4 pr04 $2 572.78 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '4.4'
+
+filename="test-runs/bks/$1-4.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-4.5 pr04 $2 572.78 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '4.5'
+
 
-filename="test-runs/$1-5.1.csv"
+filename="test-runs/bks/$1-5.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-5.1 pr05 $2 636.97 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-5.1 pr05 $2 636.97 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '5.1'
 
-filename="test-runs/$1-5.2.csv"
+filename="test-runs/bks/$1-5.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-5.2 pr05 $2 636.97 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-5.2 pr05 $2 636.97 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '5.2'
 
-filename="test-runs/$1-5.3.csv"
+filename="test-runs/bks/$1-5.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-5.3 pr05 $2 636.97 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-5.3 pr05 $2 636.97 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '5.3'
 
+filename="test-runs/bks/$1-5.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-5.4 pr05 $2 636.97 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '5.4'
+
+filename="test-runs/bks/$1-5.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-5.5 pr05 $2 636.97 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '5.5'
+
 
-filename="test-runs/$1-6.1.csv"
+filename="test-runs/bks/$1-6.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-6.1 pr06 $2 801.4 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-6.1 pr06 $2 801.4 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '6.1'
 
-filename="test-runs/$1-6.2.csv"
+filename="test-runs/bks/$1-6.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-6.2 pr06 $2 801.4 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-6.2 pr06 $2 801.4 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '6.2'
 
-filename="test-runs/$1-6.3.csv"
+filename="test-runs/bks/$1-6.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-6.3 pr06 $2 801.4 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-6.3 pr06 $2 801.4 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '6.3'
 
+filename="test-runs/bks/$1-6.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-6.4 pr06 $2 801.4 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '6.4'
+
+filename="test-runs/bks/$1-6.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-6.5 pr06 $2 801.4 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '6.5'
+
 
-filename="test-runs/$1-7.1.csv"
+filename="test-runs/bks/$1-7.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-7.1 pr07 $2 291.71 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-7.1 pr07 $2 291.71 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '7.1'
 
-filename="test-runs/$1-7.2.csv"
+filename="test-runs/bks/$1-7.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-7.2 pr07 $2 291.71 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-7.2 pr07 $2 291.71 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '7.2'
 
-filename="test-runs/$1-7.3.csv"
+filename="test-runs/bks/$1-7.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-7.3 pr07 $2 291.71 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-7.3 pr07 $2 291.71 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '7.3'
 
+filename="test-runs/bks/$1-7.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-7.4 pr07 $2 291.71 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '7.4'
+
+filename="test-runs/bks/$1-7.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-7.5 pr07 $2 291.71 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '7.5'
+
 
-filename="test-runs/$1-8.1.csv"
+filename="test-runs/bks/$1-8.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-8.1 pr08 $2 494.89 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-8.1 pr08 $2 494.89 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '8.1'
 
-filename="test-runs/$1-8.2.csv"
+filename="test-runs/bks/$1-8.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-8.2 pr08 $2 494.89 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-8.2 pr08 $2 494.89 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '8.2'
 
-filename="test-runs/$1-8.3.csv"
+filename="test-runs/bks/$1-8.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-8.3 pr08 $2 494.89 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-8.3 pr08 $2 494.89 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '8.3'
 
+filename="test-runs/bks/$1-8.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-8.4 pr08 $2 494.89 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '8.4'
+
+filename="test-runs/bks/$1-8.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-8.5 pr08 $2 494.89 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '8.5'
 
-filename="test-runs/$1-9.1.csv"
+
+filename="test-runs/bks/$1-9.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-9.1 pr09 $2 672.44 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-9.1 pr09 $2 672.44 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '9.1'
 
-filename="test-runs/$1-9.2.csv"
+filename="test-runs/bks/$1-9.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-9.2 pr09 $2 672.44 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-9.2 pr09 $2 672.44 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '9.2'
 
-filename="test-runs/$1-9.3.csv"
+filename="test-runs/bks/$1-9.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-9.3 pr09 $2 672.44 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-9.3 pr09 $2 672.44 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '9.3'
 
+filename="test-runs/bks/$1-9.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-9.4 pr09 $2 672.44 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '9.4'
+
+filename="test-runs/bks/$1-9.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-9.5 pr09 $2 672.44 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '9.5'
+
 
-filename="test-runs/$1-10.1.csv"
+filename="test-runs/bks/$1-10.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-10.1 pr10 $2 878.76 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-10.1 pr10 $2 878.76 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '10.1'
 
-filename="test-runs/$1-10.2.csv"
+filename="test-runs/bks/$1-10.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-10.2 pr10 $2 878.76 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-10.2 pr10 $2 878.76 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '10.2'
 
-filename="test-runs/$1-10.3.csv"
+filename="test-runs/bks/$1-10.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-10.3 pr10 $2 878.76 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-10.3 pr10 $2 878.76 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '10.3'
 
+filename="test-runs/bks/$1-10.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-10.4 pr10 $2 878.76 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '10.4'
+
+filename="test-runs/bks/$1-10.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-10.5 pr10 $2 878.76 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '10.5'
+
 
-filename="test-runs/$1-11.1.csv"
+filename="test-runs/bks/$1-11.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-11.1 pr11 $2 164.46 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-11.1 pr11 $2 164.46 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '11.1'
 
-filename="test-runs/$1-11.2.csv"
+filename="test-runs/bks/$1-11.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-11.2 pr11 $2 164.46 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-11.2 pr11 $2 164.46 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '11.2'
 
-filename="test-runs/$1-11.3.csv"
+filename="test-runs/bks/$1-11.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-11.3 pr11 $2 164.46 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-11.3 pr11 $2 164.46 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '11.3'
 
+filename="test-runs/bks/$1-11.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-11.4 pr11 $2 164.46 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '11.4'
+
+filename="test-runs/bks/$1-11.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-11.5 pr11 $2 164.46 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '11.5'
+
 
-filename="test-runs/$1-12.1.csv"
+filename="test-runs/bks/$1-12.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-12.1 pr12 $2 296.06 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-12.1 pr12 $2 296.06 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '12.1'
 
-filename="test-runs/$1-12.2.csv"
+filename="test-runs/bks/$1-12.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-12.2 pr12 $2 296.06 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-12.2 pr12 $2 296.06 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '12.2'
 
-filename="test-runs/$1-12.3.csv"
+filename="test-runs/bks/$1-12.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-12.3 pr12 $2 296.06 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-12.3 pr12 $2 296.06 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '12.3'
 
+filename="test-runs/bks/$1-12.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-12.4 pr12 $2 296.06 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '12.4'
+
+filename="test-runs/bks/$1-12.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-12.5 pr12 $2 296.06 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '12.5'
+
 
-filename="test-runs/$1-13.1.csv"
+filename="test-runs/bks/$1-13.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-13.1 pr13 $2 493.3 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-13.1 pr13 $2 493.3 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '13.1'
 
-filename="test-runs/$1-13.2.csv"
+filename="test-runs/bks/$1-13.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-13.2 pr13 $2 493.3 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-13.2 pr13 $2 493.3 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '13.2'
 
-filename="test-runs/$1-13.3.csv"
+filename="test-runs/bks/$1-13.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-13.3 pr13 $2 493.3 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-13.3 pr13 $2 493.3 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '13.3'
 
+filename="test-runs/bks/$1-13.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-13.4 pr13 $2 493.3 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '13.4'
+
+filename="test-runs/bks/$1-13.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-13.5 pr13 $2 493.3 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '13.5'
 
-filename="test-runs/$1-14.1.csv"
+
+filename="test-runs/bks/$1-14.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-14.1 pr14 $2 535.9 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-14.1 pr14 $2 535.9 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '14.1'
 
-filename="test-runs/$1-14.2.csv"
+filename="test-runs/bks/$1-14.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-14.2 pr14 $2 535.9 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-14.2 pr14 $2 535.9 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '14.2'
 
-filename="test-runs/$1-14.3.csv"
+filename="test-runs/bks/$1-14.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-14.3 pr14 $2 535.9 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-14.3 pr14 $2 535.9 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '14.3'
 
+filename="test-runs/bks/$1-14.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-14.4 pr14 $2 535.9 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '14.4'
+
+filename="test-runs/bks/$1-14.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-14.5 pr14 $2 535.9 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '14.5'
+
 
-filename="test-runs/$1-15.1.csv"
+filename="test-runs/bks/$1-15.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-15.1 pr15 $2 589.74 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-15.1 pr15 $2 589.74 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '15.1'
 
-filename="test-runs/$1-15.2.csv"
+filename="test-runs/bks/$1-15.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-15.2 pr15 $2 589.74 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-15.2 pr15 $2 589.74 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '15.2'
 
-filename="test-runs/$1-15.3.csv"
+filename="test-runs/bks/$1-15.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-15.3 pr15 $2 589.74 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-15.3 pr15 $2 589.74 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '15.3'
 
+filename="test-runs/bks/$1-15.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-15.4 pr15 $2 589.74 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '15.4'
+
+filename="test-runs/bks/$1-15.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-15.5 pr15 $2 589.74 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '15.5'
+
 
-filename="test-runs/$1-16.1.csv"
+filename="test-runs/bks/$1-16.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-16.1 pr16 $2 743.6 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-16.1 pr16 $2 743.6 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '16.1'
 
-filename="test-runs/$1-16.2.csv"
+filename="test-runs/bks/$1-16.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-16.2 pr16 $2 743.6 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-16.2 pr16 $2 743.6 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '16.2'
 
-filename="test-runs/$1-16.3.csv"
+filename="test-runs/bks/$1-16.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-16.3 pr16 $2 743.6 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-16.3 pr16 $2 743.6 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '16.3'
 
+filename="test-runs/bks/$1-16.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-16.4 pr16 $2 743.6 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '16.4'
+
+filename="test-runs/bks/$1-16.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-16.5 pr16 $2 743.6 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '16.5'
+
 
-filename="test-runs/$1-17.1.csv"
+filename="test-runs/bks/$1-17.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-17.1 pr17 $2 248.21 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-17.1 pr17 $2 248.21 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '17.1'
 
-filename="test-runs/$1-17.2.csv"
+filename="test-runs/bks/$1-17.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-17.2 pr17 $2 248.21 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-17.2 pr17 $2 248.21 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '17.2'
 
-filename="test-runs/$1-17.3.csv"
+filename="test-runs/bks/$1-17.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-17.3 pr17 $2 248.21 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-17.3 pr17 $2 248.21 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '17.3'
 
+filename="test-runs/bks/$1-17.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-17.4 pr17 $2 248.21 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '17.4'
+
+filename="test-runs/bks/$1-17.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-17.5 pr17 $2 248.21 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '17.5'
+
 
-filename="test-runs/$1-18.1.csv"
+filename="test-runs/bks/$1-18.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-18.1 pr18 $2 462.69 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-18.1 pr18 $2 462.69 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '18.1'
 
-filename="test-runs/$1-18.2.csv"
+filename="test-runs/bks/$1-18.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-18.2 pr18 $2 462.69 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-18.2 pr18 $2 462.69 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '18.2'
 
-filename="test-runs/$1-18.3.csv"
+filename="test-runs/bks/$1-18.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-18.3 pr18 $2 462.69 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-18.3 pr18 $2 462.69 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '18.3'
 
+filename="test-runs/bks/$1-18.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-18.4 pr18 $2 462.69 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '18.4'
+
+filename="test-runs/bks/$1-18.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-18.5 pr18 $2 462.69 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '18.5'
 
-filename="test-runs/$1-19.1.csv"
+
+filename="test-runs/bks/$1-19.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-19.1 pr19 $2 601.96 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-19.1 pr19 $2 601.96 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '19.1'
 
-filename="test-runs/$1-19.2.csv"
+filename="test-runs/bks/$1-19.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-19.2 pr19 $2 601.96 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-19.2 pr19 $2 601.96 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '19.2'
 
-filename="test-runs/$1-19.3.csv"
+filename="test-runs/bks/$1-19.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-19.3 pr19 $2 601.96 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-19.3 pr19 $2 601.96 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '19.3'
 
+filename="test-runs/bks/$1-19.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-19.4 pr19 $2 601.96 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '19.4'
+
+filename="test-runs/bks/$1-19.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-19.5 pr19 $2 601.96 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '19.5'
+
 
-filename="test-runs/$1-20.1.csv"
+filename="test-runs/bks/$1-20.1.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-20.1 pr20 $2 798.63 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-20.1 pr20 $2 798.63 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '20.1'
 
-filename="test-runs/$1-20.2.csv"
+filename="test-runs/bks/$1-20.2.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-20.2 pr20 $2 798.63 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-20.2 pr20 $2 798.63 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '20.2'
 
-filename="test-runs/$1-20.3.csv"
+filename="test-runs/bks/$1-20.3.csv"
 if [ ! -e "$filename"  ]
 then
-    ./runv2.sh test-runs/$1-20.3 pr20 $2 798.63 1 2 4 8 16 32 64 >> logs/$1.txt
+    ./runv2.sh test-runs/bks/$1-20.3 pr20 $2 798.63 0 1 2 4 8 16 >> logs/bks/$1.txt
 fi
 echo '20.3'
 
+filename="test-runs/bks/$1-20.4.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-20.4 pr20 $2 798.63 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '20.4'
+
+filename="test-runs/bks/$1-20.5.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/bks/$1-20.5 pr20 $2 798.63 0 1 2 4 8 16 >> logs/bks/$1.txt
+fi
+echo '20.5'
+
 
diff --git a/generate-script-bks.py b/generate-script-bks.py
index 8396649..e427768 100644
--- a/generate-script-bks.py
+++ b/generate-script-bks.py
@@ -1,8 +1,8 @@
 import os
 
 directory_path = './benchmark-data/chairedistributique/data/darp/tabu/'
-threads = [1,2,4,8,16,32,64]
-SAMPLE_SIZE = 3
+threads = [1,2,4,8,16]
+SAMPLE_SIZE = 5
 DATASET_SIZE = 20
 
 # initialize an empty dictionary to store the results
@@ -12,11 +12,11 @@ def generate_pr_block(prNum, bks, runs):
     filename = f'pr' + str(prNum).zfill(2)
     lines = []
     for i in range(1, runs+1):
-        outputfileName = f"""test-runs/$1-{prNum}.{i}"""
-        lines.append(f"""filename="test-runs/$1-{prNum}.{i}.csv"\n""")
+        outputfileName = f"""test-runs/bks/$1-{prNum}.{i}"""
+        lines.append(f"""filename="test-runs/bks/$1-{prNum}.{i}.csv"\n""")
         lines.append(f"""if [ ! -e "$filename"  ]\n""")
         lines.append("then\n")
-        lines.append(f"    ./runv2.sh {outputfileName} {filename} $2 {bks} {' '.join(map(str, threads))} >> logs/$1.txt\n")
+        lines.append(f"    ./runv2.sh {outputfileName} {filename} $2 {bks} 0 {' '.join(map(str, threads))} >> logs/bks/$1.txt\n")
         lines.append("fi\n")
         lines.append(f"echo '{prNum}.{i}'\n")
         lines.append("\n")
@@ -36,7 +36,7 @@ def main(outputfile):
     # print the results
     print(results)
     lines = ["#!/bin/bash\n"]
-    for i in range(1, DATASET_SIZE + 1):
+    for i in range(DATASET_SIZE, 0, -1):
         filename = f'pr' + str(i).zfill(2)
         bks = results[filename]
         i_lines = generate_pr_block(i, bks, SAMPLE_SIZE)
diff --git a/generate-script-mrt.py b/generate-script-mrt.py
new file mode 100644
index 0000000..a3f0b2e
--- /dev/null
+++ b/generate-script-mrt.py
@@ -0,0 +1,43 @@
+import os
+
+directory_path = './benchmark-data/chairedistributique/data/darp/tabu/'
+threads = [1,2,4,8,16]
+SAMPLE_SIZE = 1
+DATASET_SIZE = 20
+
+def generate_pr_block(prNum, mrt, runs):
+    filename = f'pr' + str(prNum).zfill(2)
+    lines = []
+    for i in range(1, runs+1):
+        outputfileName = f"""test-runs/mrt/$1-{prNum}.{i}"""
+        lines.append(f"""filename="test-runs/mrt/$1-{prNum}.{i}.csv"\n""")
+        lines.append(f"""if [ ! -e "$filename"  ]\n""")
+        lines.append("then\n")
+        lines.append(f"    ./runv2.sh {outputfileName} {filename} $2 0 {mrt} {' '.join(map(str, threads))} >> logs/$1.txt\n")
+        lines.append("fi\n")
+        lines.append(f"echo '{prNum}.{i}'\n")
+        lines.append("\n")
+        # lines.append(f"echo '{prNum}.{i}'\n")
+    return lines
+
+def main(outputfile, mrt):
+    # print the results
+    lines = ["#!/bin/bash\n"]
+    for i in range(1, DATASET_SIZE + 1):
+        filename = f'pr' + str(i).zfill(2)
+        i_lines = generate_pr_block(i, mrt, SAMPLE_SIZE)
+        lines.extend(i_lines)
+        lines.append("\n")
+
+    with open(outputfile, 'w') as file:
+        for line in lines:
+            file.write(line)
+    print('done')
+
+outputfile = input("Output filename: ")
+mrt = input("Max Runtime in seconds: ")
+outputfile = outputfile + '.sh'
+mrt = int(mrt)
+main(outputfile, mrt)
+
+
diff --git a/genplot-v2.py b/genplot-v2.py
index 3e308a6..547f56a 100644
--- a/genplot-v2.py
+++ b/genplot-v2.py
@@ -1,15 +1,16 @@
 import pandas as pd
 import matplotlib.pyplot as plt
 
-BASEPATH = "./test-runs"
+BASEPATH = "./test-runs/bks"
 PLOTSPATH = "./plots"
 
 TOTAL_DATASETS = 20
+SAMPLE_SIZE = 5
 
 # Prfix path
 def addToPlot(runID, datasetID):
     csv_file_paths = []
-    for i in range(1, 6):
+    for i in range(1, 2):
         csv_file_paths.append(f"{BASEPATH}/{runID}-{datasetID}.{i}.csv")
 
     # Load the CSV files into a list of pandas DataFrames
diff --git a/mrt.sh b/mrt.sh
new file mode 100755
index 0000000..88d193f
--- /dev/null
+++ b/mrt.sh
@@ -0,0 +1,161 @@
+#!/bin/bash
+filename="test-runs/mrt/$1-1.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-1.1 pr01 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '1.1'
+
+
+filename="test-runs/mrt/$1-2.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-2.1 pr02 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '2.1'
+
+
+filename="test-runs/mrt/$1-3.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-3.1 pr03 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '3.1'
+
+
+filename="test-runs/mrt/$1-4.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-4.1 pr04 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '4.1'
+
+
+filename="test-runs/mrt/$1-5.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-5.1 pr05 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '5.1'
+
+
+filename="test-runs/mrt/$1-6.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-6.1 pr06 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '6.1'
+
+
+filename="test-runs/mrt/$1-7.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-7.1 pr07 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '7.1'
+
+
+filename="test-runs/mrt/$1-8.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-8.1 pr08 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '8.1'
+
+
+filename="test-runs/mrt/$1-9.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-9.1 pr09 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '9.1'
+
+
+filename="test-runs/mrt/$1-10.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-10.1 pr10 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '10.1'
+
+
+filename="test-runs/mrt/$1-11.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-11.1 pr11 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '11.1'
+
+
+filename="test-runs/mrt/$1-12.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-12.1 pr12 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '12.1'
+
+
+filename="test-runs/mrt/$1-13.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-13.1 pr13 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '13.1'
+
+
+filename="test-runs/mrt/$1-14.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-14.1 pr14 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '14.1'
+
+
+filename="test-runs/mrt/$1-15.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-15.1 pr15 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '15.1'
+
+
+filename="test-runs/mrt/$1-16.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-16.1 pr16 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '16.1'
+
+
+filename="test-runs/mrt/$1-17.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-17.1 pr17 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '17.1'
+
+
+filename="test-runs/mrt/$1-18.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-18.1 pr18 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '18.1'
+
+
+filename="test-runs/mrt/$1-19.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-19.1 pr19 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '19.1'
+
+
+filename="test-runs/mrt/$1-20.1.csv"
+if [ ! -e "$filename"  ]
+then
+    ./runv2.sh test-runs/mrt/$1-20.1 pr20 $2 0 100 1 2 4 8 16 >> logs/$1.txt
+fi
+echo '20.1'
+
+
diff --git a/src/darp.jl b/src/darp.jl
index 9a2e88a..e778018 100644
--- a/src/darp.jl
+++ b/src/darp.jl
@@ -6,6 +6,10 @@ using Test
 using TimerOutputs
 using StatsBase
 
+# (i, k)
+const TabuMemory = Dict{Tuple{Int64,Int64},Int64}
+
+
 struct MoveParams
     i::Int64
     k1::Int64
@@ -35,7 +39,7 @@ struct RVals{N}
     RVals{N}(rmap, A, w, B, D, y) where {N} = new(rmap, A, w, B, D, y)
 end
 
-mutable struct VoilationCoefficients
+mutable struct VoilationVariables
     LAMBDA
     ALPHA #q(s)
     BETA # d(s)
@@ -44,13 +48,20 @@ mutable struct VoilationCoefficients
 
     THETA
     ZETA
-    function VoilationCoefficients(nR::Int64)
-        return new(0.015, 1.0, 1.0, 1.0, 1.0, 7.5 * log10(nR), 0.51)
+    LongerTermTabuMemory::Dict{Tuple{Int64,Int64},Int64}
+    ShortTermTabuMemory::TabuMemory
+
+    sqrt_nm::Float64
+    function VoilationVariables(nR::Int64, nV::Int64)
+        # sqrt of n*m
+        sqrt_nm = sqrt(nR * nV)
+        return new(0.015, 1.0, 1.0, 1.0, 1.0, 7.5 * log10(nR), 0.51, Dict{Tuple{Int64,Int64},Int64}([]), TabuMemory(), sqrt_nm)
     end
 end
 
-# (i, k)
-const TabuMemory = Dict{Tuple{Int64,Int64},Int64}
+function penality(c_of_solution::Float64, p_ik::Tuple{Int64,Int64}, va::VoilationVariables)
+    return va.LAMBDA * c_of_solution * va.sqrt_nm * get(va.LongerTermTabuMemory, p_ik, 1)
+end
 
 struct DARP
     nR::Int64
@@ -204,11 +215,11 @@ function remove_from_route(::Val{N}, darp::DARP, baseRoute::Route{N}, i::Int64)
     return newRoute
 end
 
-function generate_random_moves(::Val{N}, ::Val{N_SIZE}, iterationNum::Int64, tabuMem::TabuMemory,
-    darp::DARP, baseRoutes::Routes{N}, destMoves::MVector{N_SIZE,MoveParams}, vc::VoilationCoefficients) where {N,N_SIZE}
-    Int64, VoilationCoefficients
+function generate_random_moves(::Val{N}, ::Val{N_SIZE}, iterationNum::Int64,
+    darp::DARP, baseRoutes::Routes{N}, destMoves::MVector{N_SIZE,MoveParams}, va::VoilationVariables) where {N,N_SIZE}
+    Int64, VoilationVariables
 
-    TabuTenure = trunc(Int64, vc.THETA)
+    TabuTenure = trunc(Int64, va.THETA)
     routes::Dict{Int64,Vector{Int64}} = Dict(k => [] for k in darp.vehicles)
     for k in darp.vehicles
         for v in baseRoutes[k]
@@ -232,8 +243,8 @@ function generate_random_moves(::Val{N}, ::Val{N_SIZE}, iterationNum::Int64, tab
     while idx <= N_SIZE
 
         if tabuMissCount % (nR * 100) == 0
-            vc = randomize_theta(vc, nR)
-            TabuTenure = trunc(Int64, vc.THETA)
+            va = randomize_theta(va, nR)
+            TabuTenure = trunc(Int64, va.THETA)
         end
         k1, k2 = StatsBase.sample(seedRng, vehicles, vehicleWeights, 2, replace=false)
 
@@ -254,10 +265,10 @@ function generate_random_moves(::Val{N}, ::Val{N_SIZE}, iterationNum::Int64, tab
 
         param = MoveParams(i, k1, k2, p1, p2)
         tabuMove = (i, k2)
-        moveLastUsedIn = get(tabuMem, param, -TabuTenure)
+        moveLastUsedIn = get(va.ShortTermTabuMemory, param, -TabuTenure)
 
         if !(param in curMoves) && (moveLastUsedIn + TabuTenure <= iterationNum)
-            tabuMem[tabuMove] = iterationNum
+            va.ShortTermTabuMemory[tabuMove] = iterationNum
             destMoves[idx] = param
             push!(curMoves, param)
             idx += 1
@@ -265,7 +276,7 @@ function generate_random_moves(::Val{N}, ::Val{N_SIZE}, iterationNum::Int64, tab
             tabuMissCount += 1
         end
     end
-    return tabuMissCount, vc
+    return tabuMissCount, va
 end
 
 function copyVectorRoute!(::Val{N}, darp, srcRoute::Vector{Int64}, destRoute::Route{N}) where {N}
@@ -292,34 +303,48 @@ end
 
 
 
-function randomize_coefficients(vc::VoilationCoefficients, nR::Int64)
+function randomize_coefficients(vc::VoilationVariables, nR::Int64)
     vc.THETA = rand(Uniform(0.0, 7.5 * log10(nR)))
     vc.LAMBDA = rand(Uniform(0.0, 0.015))
     vc.ZETA = rand(Uniform(0, 0.5))
     return vc
 end
 
-function randomize_theta(vc::VoilationCoefficients, nR::Int64)
+function randomize_theta(vc::VoilationVariables, nR::Int64)
     vc.THETA = rand(Uniform(0.0, 7.5 * log10(nR)))
     return vc
 end
 
-function calc_penalities(vc::VoilationCoefficients)
-    vc.ALPHA = max(0.0, vc.ALPHA / (1 + vc.ZETA))
-    vc.BETA = max(0.0, vc.BETA / (1 + vc.ZETA))
-    vc.GAMMA = max(0.0, vc.GAMMA / (1 + vc.ZETA))
-    vc.TAU = max(0.0, vc.TAU / (1 + vc.ZETA))
-    return vc
+function decrease_penality_coefficients(va::VoilationVariables)
+    if va.ZETA <= 0
+        return va
+    end
+    va.ALPHA = max(0.0, va.ALPHA / (1 + va.ZETA))
+    va.BETA = max(0.0, va.BETA / (1 + va.ZETA))
+    va.GAMMA = max(0.0, va.GAMMA / (1 + va.ZETA))
+    va.TAU = max(0.0, va.TAU / (1 + va.ZETA))
+    return va
 end
 
+function increase_penality_coefficients(va::VoilationVariables)
+    if va.ZETA <= 0
+        return va
+    end
+    va.ALPHA = max(0.0, va.ALPHA * (1 + va.ZETA))
+    va.BETA = max(0.0, va.BETA * (1 + va.ZETA))
+    va.GAMMA = max(0.0, va.GAMMA * (1 + va.ZETA))
+    va.TAU = max(0.0, va.TAU * (1 + va.ZETA))
+    return va
+end
 
-function performIntraRouteOptimimzation(valN::Val{N}, route::Route{N}, darp::DARP, vc::VoilationCoefficients) where {N}
+function performIntraRouteOptimimzation(valN::Val{N}, route::Route{N}, darp::DARP, vc::VoilationVariables) where {N}
     # take every index and put it in different index
     rvals = route_values!(valN, darp, route, nothing)
     n = rvals.rmap[darp.end_depot]
     optRoute = calc_opt_for_route(valN, darp, route, rvals)
 
     bestRoute = route
+    # even though this is for one route, use static vehicle id = 1
     bestOptRoutes = OptRoutes(darp, Dict{Int64,OptRoute}([(1, optRoute)]), vc)
 
     for iIdx in 1:n-1
@@ -363,5 +388,5 @@ function performIntraRouteOptimimzation(valN::Val{N}, route::Route{N}, darp::DAR
             end
         end
     end
-    return bestRoute, bestOptRoutes
+    return bestRoute
 end
diff --git a/src/local_search_kernel.jl b/src/local_search_kernel.jl
index c992f6f..e147728 100644
--- a/src/local_search_kernel.jl
+++ b/src/local_search_kernel.jl
@@ -15,75 +15,86 @@ function search(valN::Val{N}, darp::DARP, bks::Float64, mrt::Int64, N_SIZE::Int,
     useMRTToStop = mrt != 0
     searchStart = now()
 
-    vc = VoilationCoefficients(darp.nR)
-    println("Using $(vc)")
-
-    # Penalized diversification strategy
-    attributeFrequency = Dict{Tuple{Int64,Int64},Int64}([])
-    tabuMem = TabuMemory()
-
-    @timeit to "searchInit" begin
-        scores = zeros(MVector{N_SIZE})
-        curRoutes = initRoutes
-        curRVals::Dict{Int64,RVals{N}} = Dict(k => route_values!(valN, darp, curRoutes[k], nothing) for k in darp.vehicles)
-        curOptRoutes::OptRoutes = calc_opt_full(valN, darp, curRVals, curRoutes, vc)
-        moves::MVector{N_SIZE,MoveParams} = zeros(MVector{N_SIZE,MoveParams})
-    end
-
-
+    va = VoilationVariables(darp.nR, darp.nV)
+    println("Using $(va)")
+
+    # Initialize current variable
+    scores = zeros(MVector{N_SIZE})
+    curRoutes = initRoutes
+    curRVals::Dict{Int64,RVals{N}} = Dict(k => route_values!(valN, darp, curRoutes[k], nothing) for k in darp.vehicles)
+    curOptRoutes::OptRoutes = calc_opt_full(valN, darp, curRVals, curRoutes, va)
+    curOptValue::Float64 = curOptRoutes.Val
+    moves::MVector{N_SIZE,MoveParams} = zeros(MVector{N_SIZE,MoveParams})
+
+    # Initialize best variables
     bestRoutes::Routes{N} = initRoutes
     bestOptRoutes::OptRoutes = curOptRoutes
     bestRVals::Dict{Int64,RVals{N}} = curRVals
+    bestOptValue::Float64 = bestOptRoutes.Val
 
-    baseVal = curOptRoutes.Val
-
+    baseVal = bestOptValue
     optValuesLog = Dict{Int64,Float64}([])
 
     iterNum = 1
     while true
         if iterNum % KAPPA == 0
-            vc = randomize_coefficients(vc, darp.nR)
-            beforeVal = bestOptRoutes.Val
+            va = randomize_coefficients(va, darp.nR)
+        else
+            va = decrease_penality_coefficients(va)
+        end
+
+        if iterNum % KAPPA == 0
+            beforeVal = bestOptValue
             # perform intra route optimization
-            println(darp.vehicles)
-            # Threads.@threads for vid in darp.vehicles
-            for vid in darp.vehicles
-                optimizedRoutes, optRoutes = performIntraRouteOptimimzation(valN, bestRoutes[vid], darp, vc)
-                bestRoutes[vid] = optimizedRoutes
-                bestOptRoutes.optRouteDict[vid] = optRoutes.optRouteDict[1]
+            Threads.@threads for vid in darp.vehicles
+                intraOptimizedRoute = performIntraRouteOptimimzation(valN, bestRoutes[vid], darp, va)
+                bestRoutes[vid] = intraOptimizedRoute
+            end
+            # recalculate best values
+            bestRVals = Dict(k => route_values!(valN, darp, bestRoutes[k], nothing) for k in darp.vehicles)
+            bestOptRoutes = calc_opt_full(valN, darp, bestRVals, bestRoutes, va)
+            bestOptValue = bestOptRoutes.Val
+
+            # assign best to cur
+            curRoutes = bestRoutes
+            curOptRoutes = bestOptRoutes
+            curRVals = bestRVals
+            curOptValue = curOptRoutes.Val # no Penality here because no move
+
+            iterNum += 1
+            println("Intra Route => Before = $(beforeVal) | After = $(bestOptRoutes.Val)")
+            if iterNum > mrt
+                println("Stopping Criteria - Max Runtime reached")
+                break
+            else
+                continue
             end
-            bestOptRoutes = reCalOptRoutes(darp, bestOptRoutes, vc)
-            println("##################")
-            println("Before = $(beforeVal) | After = $(bestOptRoutes.Val)")
-            printRoutes(bestRoutes, darp)
-            println("##################")
         end
 
-        vc = calc_penalities(vc)
         @timeit to "localsearch#$(iterNum)" begin
             @timeit to "randomMove" begin
-                tabuMissCount, vc = generate_random_moves(valN, Val(N_SIZE), iterNum, tabuMem, darp, curRoutes, moves, vc)
+                tabuMissCount, vc = generate_random_moves(valN, Val(N_SIZE), iterNum, darp, curRoutes, moves, va)
             end
             @timeit to "localsearch" begin
                 bestTid = local_search(Val(N), Val(N_SIZE), darp, N_SIZE, scores, moves, curRoutes, curOptRoutes, to, vc)
             end
         end
-        # use bestTid to update the cur values
-        # DO we really want to always applY?????
+        # best move among the randomly generated moves
         bestMove = moves[bestTid]
         newRoutes, newRVals, newOptRoutes = apply_move(valN, darp, bestMove, curRoutes, curRVals, curOptRoutes, vc)
+        newOptValue = newOptRoutes.ValueWithPenality(va, (bestMove.i, bestMove.k2))
 
-        # add move to frequency
-        if !haskey(attributeFrequency, (bestMove.i, bestMove.k2))
-            attributeFrequency[(bestMove.i, bestMove.k2)] = 0
-        end
-        attributeFrequency[(bestMove.i, bestMove.k2)] += 1
-
-        if newOptRoutes.Val < bestOptRoutes.Val
+        if newOptValue < bestOptValue
             bestRoutes = newRoutes
             bestRVals = newRVals
             bestOptRoutes = newOptRoutes
-            vc = randomize_coefficients(vc, darp.nR)
+            bestOptValue = newOptValue
+
+            # add it to longmemory that this move is part of solution
+            if !haskey(va.LongerTermTabuMemory, (bestMove.i, bestMove.k2))
+                va.LongerTermTabuMemory[(bestMove.i, bestMove.k2)] = 0
+            end
+            va.LongerTermTabuMemory[(bestMove.i, bestMove.k2)] += 1
         end
 
         if bestOptRoutes.Val < 0
@@ -96,16 +107,17 @@ function search(valN::Val{N}, darp::DARP, bks::Float64, mrt::Int64, N_SIZE::Int,
         optValuesLog[iterNum] = bestOptRoutes.Val
 
         # use the new ones as current and continue
-        curRoutes, curRVals, curOptRoutes = newRoutes, newRVals, newOptRoutes
-        improved = percentage_improved(baseVal, bestOptRoutes.Val)
-        gap = bestOptRoutes.Val - bks
-        println("$(iterNum) | gap=$(gap) | Tt=$(vc.THETA) | tabuMissCount=$(tabuMissCount) | best=$(bestOptRoutes.Val) | cur=$(curOptRoutes.Val)")
+        curRoutes, curRVals, curOptRoutes, curOptValue = newRoutes, newRVals, newOptRoutes, newOptValue
+
+        improved = percentage_improved(baseVal, bestOptValue)
+        gap = bestOptValue - bks
+        println("$(iterNum) | gap=$(gap) | Tt=$(vc.THETA) | tabuMissCount=$(tabuMissCount) | best=$(bestOptValue) | cur=$(curOptValue)")
         if useBKSToStop && gap <= 0
             println("Stopping Criteria => Best Known SOlution reached")
             println("Total Iterations: $(iterNum)")
             stats.total_iterations = iterNum
             break
-        elseif useMRTToStop && ts_diff(searchStart, now()) > mrt
+        elseif useMRTToStop && iterNum > mrt
             println("Stopping Criteria => Max RunTime reached")
             println("Total Iterations: $(iterNum)")
             stats.total_iterations = iterNum
@@ -117,7 +129,7 @@ function search(valN::Val{N}, darp::DARP, bks::Float64, mrt::Int64, N_SIZE::Int,
     return bestRoutes, bestOptRoutes
 end
 
-function local_search(valN::Val{N}, ::Val{NSIZE}, darp::DARP, N_SIZE::Int, scores::MVector{NSIZE}, moves::MVector{NSIZE,MoveParams}, baseRoute::Routes{N}, baseOptRoutes::OptRoutes, to::TimerOutput, vc::VoilationCoefficients) where {N,NSIZE}
+function local_search(valN::Val{N}, ::Val{NSIZE}, darp::DARP, N_SIZE::Int, scores::MVector{NSIZE}, moves::MVector{NSIZE,MoveParams}, baseRoute::Routes{N}, baseOptRoutes::OptRoutes, to::TimerOutput, vc::VoilationVariables) where {N,NSIZE}
     # use each allocated space and do the work.....
     Threads.@threads for tid in 1:N_SIZE
         move = moves[tid]
diff --git a/src/main.jl b/src/main.jl
index 379083a..242e81a 100644
--- a/src/main.jl
+++ b/src/main.jl
@@ -50,7 +50,7 @@ function run(darp::DARP, N_SIZE::Int64, stats::DARPStat, bks::Float64, mrt::Int6
                     merge!(to2, to3, tree_point=["rvals"])
                 end
                 @timeit to2 "calcOptFull" begin
-                    optRoutes = calc_opt_full(valN, darp, rvals, curRoutes, VoilationCoefficients(darp.nR))
+                    optRoutes = calc_opt_full(valN, darp, rvals, curRoutes, VoilationVariables(darp.nR, darp.nV))
                 end
                 if optRoutes.Val <= bestScore
                     bestScore = optRoutes.Val
diff --git a/src/optimization_fn.jl b/src/optimization_fn.jl
index 275b540..9f76f6a 100644
--- a/src/optimization_fn.jl
+++ b/src/optimization_fn.jl
@@ -16,8 +16,9 @@ end
 
 struct OptRoutes
     optRouteDict::Dict{Int64,OptRoute}
-    Val::Float64
-    function OptRoutes(darp::DARP, roptVals::Dict{Int64,OptRoute}, vc::VoilationCoefficients)
+    Val::Float64 # this is vaule without penality, use Value() if want to apply with penality
+    ValueWithPenality::Function
+    function OptRoutes(darp::DARP, roptVals::Dict{Int64,OptRoute}, va::VoilationVariables)
         c = 0.0
         q = 0.0
         d = 0.0
@@ -30,17 +31,18 @@ struct OptRoutes
             w += v.w
             t += v.t
         end
-        Val = (c + (q * vc.ALPHA) + (d * vc.BETA) + (w * vc.GAMMA) + (t * vc.TAU)) / 1.0
-        return new(roptVals, Val)
+        Val = (c + (q * va.ALPHA) + (d * va.BETA) + (w * va.GAMMA) + (t * va.TAU)) / 1.0
+        return new(roptVals, Val, (va::VoilationVariables, moveUsed::Tuple{Int64,Int64}) -> Val + penality(c, moveUsed, va))
     end
 end
 
-function copyOptRoutes(darp::DARP, optRoutes::OptRoutes, vc::VoilationCoefficients)
+
+function copyOptRoutes(darp::DARP, optRoutes::OptRoutes, vc::VoilationVariables)
     OptRoutes
     return OptRoutes(darp, copy(optRoutes.optRouteDict), vc)
 end
 
-function reCalOptRoutes(darp::DARP, optRoutes::OptRoutes, vc::VoilationCoefficients)
+function reCalOptRoutes(darp::DARP, optRoutes::OptRoutes, vc::VoilationVariables)
     return OptRoutes(darp, optRoutes.optRouteDict, vc)
 end
 
@@ -79,7 +81,7 @@ function route_values!(::Val{N}, darp::DARP, route::GenericRoute{N}, to::Union{N
     return RVals{N}(rmap, A, w, B, D, y)
 end
 
-function calc_opt_full(valN::Val{N}, darp::DARP, rvalues::Dict{Int64,RVals{N}}, routes::GenericRoutes{N}, vc::VoilationCoefficients) where {N}
+function calc_opt_full(valN::Val{N}, darp::DARP, rvalues::Dict{Int64,RVals{N}}, routes::GenericRoutes{N}, vc::VoilationVariables) where {N}
     OptRoutes
     optRouteDict = Dict{Int64,OptRoute}(k => calc_opt_for_route(valN, darp, routes[k], rvalues[k]) for k in darp.vehicles)
     optRoutes = OptRoutes(darp, optRouteDict, vc)
@@ -126,7 +128,7 @@ function calc_opt_for_route(::Val{N}, darp::DARP, route::GenericRoute{N}, rvals:
     return OptRoute(c, q, d, w, t)
 end
 
-function calc_opt_incr(valN::Val{N}, darp::DARP, routes::Routes{N}, move::MoveParams, optRoutes::OptRoutes, vc::VoilationCoefficients) where {N}
+function calc_opt_incr(valN::Val{N}, darp::DARP, routes::Routes{N}, move::MoveParams, optRoutes::OptRoutes, vc::VoilationVariables) where {N}
     OptRoutes
     routeK1 = routes[move.k1]
     routeK2 = routes[move.k2]
@@ -140,7 +142,7 @@ function calc_opt_incr(valN::Val{N}, darp::DARP, routes::Routes{N}, move::MovePa
     return reCalOptRoutes(darp, newOptRoutes, vc)
 end
 
-function apply_move(valN::Val{N}, darp::DARP, move::MoveParams, curRoutes::Routes{N}, curRVals::Dict{Int64,RVals{N}}, curOptRoutes::OptRoutes, vc::VoilationCoefficients) where {N}
+function apply_move(valN::Val{N}, darp::DARP, move::MoveParams, curRoutes::Routes{N}, curRVals::Dict{Int64,RVals{N}}, curOptRoutes::OptRoutes, vc::VoilationVariables) where {N}
     newRoutes = Dict{Int64,Route{N}}(k => copy(curRoutes[k]) for k in darp.vehicles)
     newRoutes[move.k1] = remove_from_route(valN, darp, curRoutes[move.k1], move.i)
     newRoutes[move.k2] = insert_to_route(valN, darp, curRoutes[move.k2], move.i, move.p1, move.p2)
diff --git a/super-test.sh b/super-test.sh
index 3a7e088..dce2941 100755
--- a/super-test.sh
+++ b/super-test.sh
@@ -1,14 +1,10 @@
 echo 'Test Suite - 1'
-./bks.sh 30 1000 1 2 4 8 16 24
+./bks.sh 40 1000
+
 echo 'Test Suite - 2'
-./bks.sh 31 1250 1 2 4 8 16 24
+./bks.sh 41 1500
+
 echo 'Test Suite - 3'
-./bks.sh 32 1500 1 2 4 8 16 24
-echo 'Test Suite - 4'
-./bks.sh 33 1750 1 2 4 8 16 24
-echo 'Test Suite - 5'
-./bks.sh 34 2000 1 2 4 8 16 24
-echo 'Test Suite - 6'
-./bks.sh 35 2250 1 2 4 8 16 24
-echo 'Test Suite - 7'
-./bks.sh 36 2500 1 2 4 8 16 24
\ No newline at end of file
+./bks.sh 42 2000
+
+echo 'Test Suite - 4'
\ No newline at end of file
